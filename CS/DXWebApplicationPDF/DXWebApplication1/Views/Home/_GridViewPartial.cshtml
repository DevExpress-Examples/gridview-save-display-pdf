@{
    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "Home", Action = "GridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Home", Action = "GridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Home", Action = "GridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Home", Action = "GridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "Id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        // settings.Columns.Add("Id");
        settings.Columns.Add("FirstName");
        settings.Columns.Add("SecondName");
        settings.Columns.Add(column => {
            column.Caption = "PDF file";
            column.SetDataItemTemplateContent(container => {
                var obj = DataBinder.Eval(container.DataItem, "PdfFile");
                if (obj == null) {
                    Html.DevExpress().Label(
                        edtSettings => {
                            edtSettings.Text = "No file";
                        }
                    ).Render();
                } else {
                    Html.DevExpress().HyperLink(hyperlink => {
                        var visibleIndex = container.VisibleIndex;
                        var keyValue = container.KeyValue;
                        hyperlink.Name = "hld" + keyValue.ToString();
                        hyperlink.Properties.Text = "Open pdf";
                        hyperlink.Properties.Target = "_blank";
                        hyperlink.NavigateUrl = string.Format("FileDownloadHandler.ashx?id={0}", container.KeyValue);
                    }).Render();
                }
            });
            column.SetEditItemTemplateContent(container => {
                using (Html.BeginForm("ImageUpload", "Home", FormMethod.Post)) {
                    Html.DevExpress().UploadControl(
                        ucSettings => {
                            ucSettings.Name = "uploadControl";
                            ucSettings.ShowUploadButton = true;
                            ucSettings.AddUploadButtonsSpacing = 0;
                            ucSettings.AddUploadButtonsHorizontalPosition = AddUploadButtonsHorizontalPosition.InputRightSide;
                            ucSettings.CallbackRouteValues = new { Controller = "Home", Action = "ImageUpload" };
                            ucSettings.ValidationSettings.Assign(DXWebApplication1.Controllers.UploadControlHelper.ValidationSettings);
                            ucSettings.ClientSideEvents.FileUploadComplete = string.Format("function(s, e) {{onFileUploadComplete(s,e,{0});}}", container.KeyValue);
                        }
                    ).Render();
                }
                var obj = DataBinder.Eval(container.DataItem, "PdfFile");
                Html.DevExpress().HyperLink(hyperlink => {
                    var visibleIndex = container.VisibleIndex;
                    var keyValue = container.KeyValue;
                    hyperlink.Properties.EnableClientSideAPI = true;
                    hyperlink.ClientVisible = !(obj == null);
                    hyperlink.Name = "hle";
                    hyperlink.Properties.Text = "Open pdf";
                    hyperlink.Properties.Target = "_blank";
                    hyperlink.NavigateUrl = string.Format("FileDownloadHandler.ashx?id={0}", container.KeyValue);
                }).Render();

                Html.DevExpress().Label(
                    edtSettings => {
                        edtSettings.Name = "lble";
                        edtSettings.Properties.EnableClientSideAPI = true;
                        edtSettings.Text = obj == null ? "No file" : "";
                    }
                ).Render();
            });
        });
    });
    if (ViewData["EditError"] != null) {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()